@model SistemaAsistencia.Models.MonthlyReportViewModel
@{
    ViewData["Title"] = "Reporte General Mensual";

    // Helper para asignar una clase CSS según el estado
    string GetStatusClass(AttendanceStatus status)
    {
        return status switch
        {
            AttendanceStatus.Attended => "table-success",
            AttendanceStatus.LateArrival => "table-warning",
            AttendanceStatus.EarlyDeparture => "table-info",
            AttendanceStatus.Absent => "table-danger",
            AttendanceStatus.Incomplete => "table-secondary",
            _ => ""
        };
    }
}

<h1>@ViewData["Title"]</h1>
<hr />

<form asp-action="MonthlyReport" method="get" class="row g-3 align-items-end mb-4">
    <div class="col-md-2 col-sm-6 col-6">
        <label asp-for="Month" class="form-label"></label>
        <select asp-for="Month" class="form-select">
            @for (int i = 1; i <= 12; i++)
            {
                <option value="@i">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
            }
        </select>
    </div>
    <div class="col-md-2 col-sm-6 col-6">
        <label asp-for="Year" class="form-label"></label>
        <input asp-for="Year" class="form-control" type="number" min="2020" max="@DateTime.Now.Year" />
    </div>
    <div class="col-md-3 col-sm-12 col-12">
        <label for="searchName" class="form-label">Buscar por nombre:</label>
        <input type="text" name="searchName" value="@Model.SearchName" class="form-control" placeholder="Nombre del empleado..." />
    </div>
    <div class="col-md-2 col-sm-6 col-6">
        <label for="pageSize" class="form-label">Empleados por página:</label>
        <select name="pageSize" class="form-select">
            <option value="5" selected="@(Model.PageSize == 5)">5</option>
            <option value="10" selected="@(Model.PageSize == 10)">10</option>
            <option value="20" selected="@(Model.PageSize == 20)">20</option>
            <option value="50" selected="@(Model.PageSize == 50)">50</option>
        </select>
    </div>
    <div class="col-md-3 col-sm-6 col-6">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-search"></i> Generar Reporte
        </button>
        <a href="@Url.Action("MonthlyReport")" class="btn btn-secondary">
            <i class="fas fa-refresh"></i> Limpiar
        </a>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered text-center" style="font-size: 0.8rem;">
        <thead class="table-light">
            <tr>
                <th style="min-width: 150px;">Empleado</th>
                @foreach (var day in Model.DayHeaders)
                {
                    <th>@day</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model.EmployeeStatuses)
            {
                <tr>
                    <td class="text-start fw-bold">@employee.UserName</td>
                    @foreach (var day in Model.DayHeaders)
                    {
                        var status = employee.DailyStatuses[int.Parse(day)];
                        <td class="@GetStatusClass(status.Status)" title="@status.Status.ToString()">
                            @if (status.ClockInTime.HasValue)
                            {
                                <span>@status.ClockInTime?.ToString(@"hh\:mm")</span>

                                <br>
                            }
                            @if (status.ClockOutTime.HasValue)
                            {
                                <span>@status.ClockOutTime?.ToString(@"hh\:mm")</span>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Información de paginación -->
<div class="row mt-3">
    <div class="col-md-6">
        <p class="text-muted">
            Mostrando @((Model.CurrentPage - 1) * Model.PageSize + 1) a @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalUsers)) 
            de @Model.TotalUsers empleados
        </p>
    </div>
    <div class="col-md-6">
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Paginación del reporte">
                <ul class="pagination justify-content-end">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MonthlyReport", new { 
                                month = Model.Month, 
                                year = Model.Year, 
                                searchName = Model.SearchName, 
                                page = Model.CurrentPage - 1, 
                                pageSize = Model.PageSize 
                            })">
                                <i class="fas fa-chevron-left"></i> Anterior
                            </a>
                        </li>
                    }
                    
                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("MonthlyReport", new { 
                                month = Model.Month, 
                                year = Model.Year, 
                                searchName = Model.SearchName, 
                                page = i, 
                                pageSize = Model.PageSize 
                            })">@i</a>
                        </li>
                    }
                    
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("MonthlyReport", new { 
                                month = Model.Month, 
                                year = Model.Year, 
                                searchName = Model.SearchName, 
                                page = Model.CurrentPage + 1, 
                                pageSize = Model.PageSize 
                            })">
                                Siguiente <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

<div class="mt-4">
    <h5>Leyenda</h5>
    <span class="badge bg-success">Asistió</span>
    <span class="badge bg-warning text-dark">Llegada Tarde</span>
    <span class="badge bg-info text-dark">Salida Anticipada</span>
    <span class="badge bg-danger">Ausente</span>
    <span class="badge bg-secondary">Incompleto</span>
</div>