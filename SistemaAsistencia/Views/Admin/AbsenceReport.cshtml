@model IEnumerable<SistemaAsistencia.Models.User>
@{
    ViewData["Title"] = "Reporte de Inasistencias";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@ViewData["Title"]</h1>
    <div class="text-muted">
        <small>Mostrando @(((ViewData["CurrentPage"] as int? ?? 1) - 1) * (ViewData["PageSize"] as int? ?? 20) + 1) - @Math.Min((ViewData["CurrentPage"] as int? ?? 1) * (ViewData["PageSize"] as int? ?? 20), ViewData["TotalRecords"] as int? ?? 0) de @ViewData["TotalRecords"] empleados ausentes</small>
    </div>
</div>
<hr />

<form asp-action="AbsenceReport" method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <label class="form-label">Seleccionar Fecha:</label>
            <input type="date" name="reportDate" value="@ViewData["ReportDate"]" class="form-control" />
        </div>
        <div class="col-md-2">
            <label class="form-label">Mostrar:</label>
            <select name="pageSize" class="form-select">
                <option value="10" selected="@(ViewData["PageSize"]?.ToString() == "10")">10</option>
                <option value="20" selected="@(ViewData["PageSize"]?.ToString() == "20")">20</option>
                <option value="50" selected="@(ViewData["PageSize"]?.ToString() == "50")">50</option>
            </select>
        </div>
        <div class="col-md-3 align-self-end">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Generar Reporte
            </button>
        </div>
    </div>
    <input type="hidden" name="pageNumber" value="1" />
</form>

@if (Model.Any())
{
    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Nombre del Empleado</th>
                <th>Email</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>
                        <span class="badge bg-danger">
                            <i class="bi bi-x-circle me-1"></i>Ausente
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
    <!-- Controles de Paginación -->
    @if (ViewData["TotalPages"] as int? > 1)
    {
        <nav aria-label="Paginación de reporte" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Botón Primera Página -->
                <li class="page-item @(ViewData["HasPreviousPage"] as bool? == true ? "" : "disabled")">
                    <a class="page-link" asp-action="AbsenceReport" asp-route-pageNumber="1" asp-route-reportDate="@ViewData["ReportDate"]" asp-route-pageSize="@ViewData["PageSize"]">
                        <i class="bi bi-chevron-double-left"></i> Primera
                    </a>
                </li>
                
                <!-- Botón Página Anterior -->
                <li class="page-item @(ViewData["HasPreviousPage"] as bool? == true ? "" : "disabled")">
                    <a class="page-link" asp-action="AbsenceReport" asp-route-pageNumber="@ViewData["PreviousPageNumber"]" asp-route-reportDate="@ViewData["ReportDate"]" asp-route-pageSize="@ViewData["PageSize"]">
                        <i class="bi bi-chevron-left"></i> Anterior
                    </a>
                </li>
                
                <!-- Números de página -->
                @{
                    int currentPage = ViewData["CurrentPage"] as int? ?? 1;
                    int totalPages = ViewData["TotalPages"] as int? ?? 1;
                    int startPage = Math.Max(1, currentPage - 2);
                    int endPage = Math.Min(totalPages, currentPage + 2);
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-action="AbsenceReport" asp-route-pageNumber="@i" asp-route-reportDate="@ViewData["ReportDate"]" asp-route-pageSize="@ViewData["PageSize"]">
                            @i
                        </a>
                    </li>
                }
                
                <!-- Botón Página Siguiente -->
                <li class="page-item @(ViewData["HasNextPage"] as bool? == true ? "" : "disabled")">
                    <a class="page-link" asp-action="AbsenceReport" asp-route-pageNumber="@ViewData["NextPageNumber"]" asp-route-reportDate="@ViewData["ReportDate"]" asp-route-pageSize="@ViewData["PageSize"]">
                        Siguiente <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
                
                <!-- Botón Última Página -->
                <li class="page-item @(ViewData["HasNextPage"] as bool? == true ? "" : "disabled")">
                    <a class="page-link" asp-action="AbsenceReport" asp-route-pageNumber="@ViewData["TotalPages"]" asp-route-reportDate="@ViewData["ReportDate"]" asp-route-pageSize="@ViewData["PageSize"]">
                        Última <i class="bi bi-chevron-double-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }
}
else
{
    <div class="alert alert-success text-center">
        <h4><i class="bi bi-check-circle me-2"></i>¡Excelente!</h4>
        <p class="mb-0">Todos los empleados registraron asistencia el @ViewData["ReportDate"].</p>
    </div>
}

<div class="mt-4">
    <a asp-action="Index" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Volver al Panel
    </a>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
}